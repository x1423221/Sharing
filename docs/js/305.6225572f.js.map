{"version":3,"file":"js/305.6225572f.js","mappings":"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","sources":["webpack://split/../../index.ts","webpack://split/./src/firebase/config.js","webpack://split/./src/components/BtnGotoHomePage.vue","webpack://split/./src/components/BtnGotoHomePage.vue?431e","webpack://split/./src/components/PaymentComponents.vue","webpack://split/./src/components/PaymentComponents.vue?a275","webpack://split/./src/components/GroupComponents.vue","webpack://split/./src/components/GroupComponents.vue?0d86"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","// Import the functions you need from the SDKs you need\r\n\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: import.meta.FIREBASEKEY,\r\n  authDomain: \"vuetest-35344.firebaseapp.com\",\r\n  projectId: \"vuetest-35344\",\r\n  storageBucket: \"vuetest-35344.firebasestorage.app\",\r\n  messagingSenderId: \"2844207119\",\r\n  appId: \"1:2844207119:web:687837aeece2bf9eea5b7a\",\r\n  measurementId: \"G-42LZ3K97KN\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nexport default db","<template>\r\n  <div>\r\n    <el-button type=\"danger\" size=\"small\" :icon=\"Close\" circle @click=\"gotoHomePage\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRouter } from \"vue-router\";\r\nimport { Close } from \"@element-plus/icons-vue\";\r\n\r\nconst router = useRouter();\r\n\r\nconst gotoHomePage = () => {\r\n  router.push(\"/\");\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ndiv{\r\n  position: absolute;\r\n  left: 0;\r\n}\r\n</style>","import script from \"./BtnGotoHomePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BtnGotoHomePage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BtnGotoHomePage.vue?vue&type=style&index=0&id=70e41686&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-70e41686\"]])\n\nexport default __exports__","<template>\r\n  <el-dialog v-model=\"dialogFormVisible\" \r\n            destroy-on-close :show-close=\"false\"\r\n            width=\"80%\"\r\n            :lock-scroll=\"false\"\r\n            :close-on-click-modal=\"false\">\r\n    <el-form :model=\"dialogpayment\">\r\n      <el-divider content-position=\"left\">帳目維護</el-divider>\r\n      <el-form-item label=\"帳目名稱\" :label-width=\"formLabelWidth\">\r\n        <el-input v-model=\"dialogpayment.description\" autocomplete=\"off\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"帳目總金額\" :label-width=\"formLabelWidth\">\r\n        <el-input v-model=\"dialogpayment.amount\" inputmode=\"decimal\"></el-input>\r\n      </el-form-item>\r\n      <el-divider content-position=\"left\">分攤明細</el-divider>\r\n      <el-scrollbar ref=\"ShareArea\" height=\"300px\">\r\n        <el-row :gutter=\"3\" v-for=\"(item, index) in dialogpayment.split\" :key=\"index\">\r\n          <el-col :span=\"7\">\r\n            <el-select v-model=\"dialogpayment.split[index].userId\" @change=\"MemberChange(index)\">\r\n              <el-option v-for=\"u in MemberList.value\" :key=\"u.userId\" :label=\"u.name\" :value=\"u.userId\" />\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"17\">\r\n            <el-input v-model=\"dialogpayment.split[index].share\" inputmode=\"decimal\" style=\"width:100%\"></el-input>\r\n          </el-col>\r\n        </el-row>\r\n      </el-scrollbar>\r\n    </el-form>\r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <el-button type=\"danger\" @click=\"CloseDialog(false)\">關閉</el-button>\r\n        <el-button type=\"primary\" @click=\"CloseDialog(true)\">\r\n          儲存\r\n        </el-button>\r\n        <el-button type=\"success\" @click=\"Newshare\">新增</el-button>\r\n      </div>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport db from \"../firebase/config\";\r\nimport { doc, updateDoc } from \"firebase/firestore\";\r\nimport { ref, inject, nextTick , defineModel} from \"vue\";\r\n\r\n\r\nconst ShareArea = ref(null);\r\nconst MemberList = inject(\"MemberList\");\r\nconst profile = inject(\"profile\");\r\n\r\nconst dialogFormVisible = defineModel(\"dialogFormVisible\", { default: false });\r\nconst DocId = defineModel(\"DocId\");\r\nconst dialogpayment = defineModel(\"dialogpayment\");\r\nconst formLabelWidth = \"140px\"\r\n\r\nconst CloseDialog = async (NeedUpdate) => {\r\n  const transListdocRef = doc(db, \"transactionList\", DocId.value);\r\n  if (NeedUpdate) {\r\n    const isOverflow = dialogpayment.value.split\r\n      .filter(s => s.userName !== dialogpayment.value.payer)\r\n      .reduce((sum, s) => Number(sum) + Number(s.share), 0)\r\n      > dialogpayment.value.amount\r\n\r\n    if (isOverflow) {\r\n      alert(\"明細總金額 超過 帳目總金額\")\r\n      return;\r\n    }\r\n\r\n    await updateDoc(transListdocRef, {\r\n      [`${dialogpayment.value.id}.description`]: dialogpayment.value.description,\r\n      [`${dialogpayment.value.id}.amount`]: Number(dialogpayment.value.amount),\r\n      [`${dialogpayment.value.id}.split`]: dialogpayment.value.split,\r\n    });\r\n  }\r\n\r\n  await updateDoc(transListdocRef, {\r\n    [`${dialogpayment.value.id}.isLock`]: false,\r\n  });\r\n\r\n  dialogFormVisible.value = false;\r\n}\r\n\r\nconst Newshare = () => {\r\n  dialogpayment.value.split.push({\r\n    share: Number(0),\r\n    userId: profile.value.userId,\r\n    userName: profile.value.displayName,\r\n  });\r\n\r\n  nextTick(() => {\r\n    if (ShareArea.value)\r\n      ShareArea.value.wrapRef.scrollTop = ShareArea.value.wrapRef.scrollHeight\r\n  })\r\n};\r\n\r\nconst MemberChange = (index) => {\r\n  const selectedUser = MemberList.value.find(\r\n    (m) => m.userId === dialogpayment.value.split[index].userId\r\n  );\r\n\r\n  dialogpayment.value.split[index].userName = selectedUser.name;\r\n};\r\n</script>\r\n\r\n<style scoped src=\"../../public/Page.css\"></style>\r\n","import script from \"./PaymentComponents.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaymentComponents.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"../../public/Page.css?vue&type=style&index=0&id=7e2cda8c&scoped=true&lang=css&external\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7e2cda8c\"]])\n\nexport default __exports__","<template>\r\n  <PaymentComponents v-model:dialogFormVisible=\"dialogFormVisible\" v-model:dialogpayment=\"dialogpayment\"\r\n    v-model:DocId=\"DocId\"\r\n    >\r\n  </PaymentComponents>\r\n  <el-container>\r\n    <el-header>\r\n      <div class=\"title-container\">\r\n        <BtnGotoHomePage></BtnGotoHomePage>\r\n        <div v-if=\"currentGroup && !isEdit\">\r\n          <span>{{ currentGroup.value.name }}</span>\r\n          <el-button type=\"success\" :icon=\"Edit\" size=\"small\" circle @click=\"EditGroupName\" />\r\n        </div>\r\n        <div v-if=\"currentGroup && isEdit\">\r\n          <el-input type=\"text\" style=\"width: 100px;\" v-model=\"DocName\" />\r\n          <el-button type=\"success\" :icon=\"Check\" size=\"small\" circle @click=\"SaveGroupName\" />\r\n          <el-button type=\"danger\" :icon=\"Close\" size=\"small\" circle @click=\"EditGroupName\" />\r\n        </div>\r\n      </div>\r\n    </el-header>\r\n    <el-main>\r\n      <el-divider content-position=\"left\">\r\n        建議付款方案\r\n      </el-divider>\r\n      <el-table :data=\"PaymentsList\" height=\"300px\">\r\n        <el-table-column prop=\"from\" label=\"付款人\" />\r\n        <el-table-column prop=\"to\" label=\"收款人\" />\r\n        <el-table-column prop=\"amount\" label=\"應付金額\" />\r\n      </el-table>\r\n      <el-divider content-position=\"left\">\r\n        帳目列表\r\n      </el-divider>\r\n      <el-scrollbar height=\"300px\" wrap-style=\"overflow-x: hidden;\">\r\n        <div height=\"40vh\">\r\n          <el-card v-for=\"(d, index) in TransactionList\" :key=\"index\" :class=\"{ hidden: cardisNew[d.id] }\"\r\n            :style=\"cardStyle[d.id]\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span>{{ d.description }}</span>\r\n              </div>\r\n            </template>\r\n            <div v-if=\"d.split\">\r\n              由{{ d.payer }}先墊付金額:<span>{{ d.amount }}</span>\r\n              <p>\r\n                {{ d.payer }}支付{{d.amount - d.split.filter(s => s.userName !== d.payer).reduce((sum, s) => sum +\r\n                  Number(s.share), 0)}}\r\n              </p>\r\n              <p v-if=\"d.split.length > 0\">\r\n                <span v-for=\"(s, i) in personSplit[index]\" :key=\"s.userId\">\r\n                  <span>{{ s.userName }}</span>應付<span>{{ s.share }}</span>\r\n                  <span v-if=\"(i + 1) % 2 === 0\"><br /></span>\r\n                  <span v-else-if=\"i !== personSplit[index].length - 1\">, </span>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <template #footer>\r\n              <div v-if=\"!d.isLock\">\r\n                <el-button type=\"primary\" @click=\"showModal(d)\">\r\n                  編輯\r\n                </el-button>\r\n              </div>\r\n            </template>\r\n          </el-card>\r\n        </div>\r\n      </el-scrollbar>\r\n    </el-main>\r\n    <el-footer>\r\n      <el-button type=\"success\" @click=\"shareMember\">分享</el-button>\r\n      <el-button type=\"success\" @click=\"NewTransaction\">新增帳目</el-button>\r\n    </el-footer>\r\n  </el-container>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport liff from \"@line/liff\";\r\nimport db from \"../firebase/config\";\r\nimport BtnGotoHomePage from \"./BtnGotoHomePage.vue\";\r\nimport PaymentComponents from \"./PaymentComponents.vue\";\r\n\r\nimport { Edit, Close, Check } from \"@element-plus/icons-vue\";\r\nimport { inject, onMounted, ref, onUnmounted, reactive, watch, computed } from \"vue\";\r\nimport { doc, updateDoc, setDoc, onSnapshot, getDoc } from \"firebase/firestore\";\r\nimport { Transaction, TransactionDetail, setCardStyle } from \"../Models/SplitModels\";\r\n\r\n\r\n//取得記錄的資料\r\nconst profile = inject(\"profile\");\r\nconst isLoading = inject(\"isLoading\");\r\nconst currentGroup = inject(\"currentGroup\");\r\nconst MemberList = inject(\"MemberList\");\r\n\r\n//編輯旗標\r\nconst isEdit = ref(false);\r\n//帳目資料\r\nconst TransactionList = ref([]);\r\n//帳目統計資料\r\nconst TransactionColData = ref([]);\r\n//最終計算結果\r\nconst PaymentsList = ref([]);\r\n\r\n//文件ID\r\nconst DocId = ref(\"\");\r\n//文件名稱\r\nconst DocName = ref(\"\");\r\n\r\n//帳目卡片的動畫\r\nconst cardStyle = reactive({});\r\nconst cardisNew = reactive({});\r\n\r\nconst dialogFormVisible = ref(false);\r\n\r\n//註冊階段\r\nonMounted(async () => {\r\n  try {\r\n    //先將讀取旗標on上\r\n    isLoading.value = true;\r\n\r\n    //設定\r\n    DocName.value = currentGroup.value.name;\r\n    DocId.value = currentGroup.value.id;\r\n\r\n    if (currentGroup) {\r\n      fetchTransactions(DocId.value);\r\n    }\r\n  } catch (err) {\r\n    alert(err);\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n});\r\n\r\n//監聽List 當有被新增時，更新動畫渲染\r\nwatch(TransactionList, (newItem, oldItem) => {\r\n  if (oldItem.length > 0) {\r\n    const plusData = newItem.filter(item => {\r\n      // 如果在 oldItem 中找不到對應的 item.id，則保留這個 item\r\n      return !oldItem.some(_item => _item.id === item.id);\r\n    });\r\n    setCardStyle(plusData, cardStyle, cardisNew)\r\n  }\r\n  else {\r\n    setCardStyle(newItem, cardStyle, cardisNew)\r\n  }\r\n})\r\n\r\nconst EditGroupName = () => {\r\n  isEdit.value = !isEdit.value;\r\n};\r\n\r\nconst SaveGroupName = async () => {\r\n  try {\r\n    isLoading.value = true;\r\n    currentGroup.value.name = DocName.value;\r\n    const docRef = doc(db, \"241229Test\", currentGroup.value.did);\r\n    await updateDoc(docRef, {\r\n      [`${currentGroup.value.id}.name`]: currentGroup.value.name,\r\n    });\r\n\r\n    isEdit.value = !isEdit.value;\r\n    isLoading.value = false;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\nconst NewTransaction = async () => {\r\n  isLoading.value = true;\r\n\r\n  //id, payer, amount, description, date, split = [];\r\n  const RID = crypto.randomUUID();\r\n\r\n  const transaction = new Transaction(\r\n    profile.value.userId,\r\n    profile.value.displayName,\r\n    0,\r\n    profile.value.displayName + \"創建\",\r\n    new Date()\r\n  ).toMap();\r\n\r\n  try {\r\n    const TransactionListdoc = doc(\r\n      db,\r\n      \"transactionList\",\r\n      currentGroup.value.id\r\n    );\r\n    const TransactionListnap = await getDoc(TransactionListdoc);\r\n\r\n    if (TransactionListnap.exists()) {\r\n      await updateDoc(TransactionListdoc, {\r\n        [`${RID}`]: transaction,\r\n      });\r\n    }\r\n    //否則新增文件並新增群組\r\n    else {\r\n      await setDoc(TransactionListdoc, {\r\n        [`${RID}`]: transaction,\r\n      });\r\n    }\r\n\r\n    isLoading.value = false;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\nconst shareMember = async () => {\r\n  try {\r\n    const RID = crypto.randomUUID();\r\n\r\n    const currentUrl = \"https://liff.line.me/2006768109-93myxPab\" + \"/\"; // 取得當前頁面網址\r\n    const shareUrl = `${currentUrl}?s=${RID}`; // 組合分享連結\r\n\r\n    //alert(liff.isApiAvailable(\"shareTargetPicker\"));\r\n    await liff\r\n      .shareTargetPicker(\r\n        [\r\n          {\r\n            \"type\": \"flex\",\r\n            \"altText\": \"你收到一則分帳群組邀請！\",\r\n            \"contents\": {\r\n              \"type\": \"bubble\",\r\n              \"body\": {\r\n                \"type\": \"box\",\r\n                \"layout\": \"vertical\",\r\n                \"spacing\": \"md\",\r\n                \"contents\": [\r\n                  {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"💰 分帳群組邀請\",\r\n                    \"weight\": \"bold\",\r\n                    \"size\": \"xl\",\r\n                    \"color\": \"#1DB446\"\r\n                  },\r\n                  {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"群組名稱：\" + DocName.value,\r\n                    \"wrap\": true,\r\n                    \"weight\": \"bold\",\r\n                    \"size\": \"md\",\r\n                    \"color\": \"#333333\"\r\n                  },\r\n                  {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"📅 建立日期：\" + currentGroup.value.date,\r\n                    \"size\": \"sm\",\r\n                    \"color\": \"#666666\"\r\n                  },\r\n                  {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"📌記錄每一筆支出，讓分帳變得更輕鬆！\",\r\n                    \"size\": \"sm\",\r\n                    \"color\": \"#999999\",\r\n                    \"wrap\": true\r\n                  }\r\n                ]\r\n              },\r\n              \"footer\": {\r\n                \"type\": \"box\",\r\n                \"layout\": \"vertical\",\r\n                \"spacing\": \"sm\",\r\n                \"contents\": [\r\n                  {\r\n                    \"type\": \"button\",\r\n                    \"style\": \"primary\",\r\n                    \"color\": \"#1DB446\",\r\n                    \"action\": {\r\n                      \"type\": \"uri\",\r\n                      \"label\": \"加入群組\",\r\n                      \"uri\": shareUrl\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }],\r\n        {\r\n          isMultiple: true,\r\n        }\r\n      )\r\n      //當成功分享後，將token寫入firebase\r\n      .then(async () => {\r\n        const TokenDoc = doc(db, \"TokenList\", RID);\r\n        await setDoc(TokenDoc, {\r\n          date: new Date(),\r\n          docId: currentGroup.value.did,\r\n          fid: currentGroup.value.id,\r\n        });\r\n      });\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\n//計算淨額方法\r\nconst calculatePayments = () => {\r\n\r\n  let transactions = [];\r\n\r\n  // 先取出紀錄再TransactionColData中每個人的收支\r\n  let balances = TransactionColData.value.map((user) => ({\r\n    userName: user.userName,\r\n    netAmount: user.splitAmount,\r\n  }));\r\n\r\n  // 把要給錢的跟要收錢的區分\r\n  let debtors = balances.filter((user) => user.netAmount < 0);//給錢的\r\n  let creditors = balances.filter((user) => user.netAmount > 0);//收錢的\r\n\r\n  //紀錄結果\r\n  let payments = [];\r\n\r\n  // 如果要給錢跟要收錢的都有人 才要進來計算\r\n  while (debtors.length > 0 && creditors.length > 0) {\r\n\r\n    let debtor = debtors[0]; // 取第一個欠錢的人\r\n    let creditor = creditors[0]; // 取第一個多付錢的人\r\n\r\n    //計算\r\n    let paymentAmount = Math.min(\r\n      Math.abs(debtor.netAmount),\r\n      creditor.netAmount\r\n    );\r\n\r\n    // 記錄這筆付款\r\n    payments.push({\r\n      from: debtor.userName,\r\n      to: creditor.userName,\r\n      amount: paymentAmount,\r\n    });\r\n\r\n    // 更新 debtor, creditor 的餘額\r\n    debtor.netAmount += paymentAmount;\r\n    creditor.netAmount -= paymentAmount;\r\n\r\n    // 移除 netAmount 變成 0 的人\r\n    if (debtor.netAmount === 0) debtors.shift();\r\n    if (creditor.netAmount === 0) creditors.shift();\r\n  }\r\n\r\n  // 4️⃣ 更新 Vue 變數，讓畫面可以顯示\r\n  transactions = payments;\r\n  return transactions;\r\n};\r\n\r\nconst fetchTransactions = async (DocId) => {\r\n  const transListdocRef = doc(db, \"transactionList\", DocId);\r\n  const splitRef = doc(db, \"241229Test\", currentGroup.value.did);\r\n\r\n  const splitShot = onSnapshot(splitRef, (docSnap) => {\r\n    if (docSnap.exists()) {\r\n      const data = docSnap.data()[currentGroup.value.id];\r\n      currentGroup.value.members = data.members;\r\n      MemberList.value = data.members;\r\n    }\r\n  });\r\n\r\n  // 設置 Firebase 監聽\r\n  const unsubscribe = onSnapshot(transListdocRef, (docSnap) => {\r\n    TransactionList.value = [];\r\n    TransactionColData.value = [];\r\n    PaymentsList.value = [];\r\n    if (docSnap.exists()) {\r\n      const data = docSnap.data();\r\n      const tmpdata = Object.entries(data).map(([key, value]) => ({\r\n        id: key,\r\n        ...value,\r\n      }));\r\n\r\n\r\n      TransactionList.value = tmpdata;\r\n      TransactionList.value.forEach((value) => {\r\n        let myselfAmount = 0;\r\n\r\n        if (value.split) {\r\n          value.split.forEach((split) => {\r\n            const userId = split.userId;\r\n            const userName = split.userName;\r\n            const share = parseFloat(split.share) * -1; // 轉換成負值\r\n            if (userId != value.userId) {\r\n              myselfAmount += share;\r\n\r\n              let issplitExsist = TransactionColData.value.find((record) => {\r\n                return record.userId === userId;\r\n              });\r\n\r\n              if (issplitExsist) {\r\n                issplitExsist.splitAmount += share;\r\n              } else {\r\n                TransactionColData.value.push(\r\n                  new TransactionDetail(userId, userName, share));\r\n              }\r\n            }\r\n          });\r\n\r\n          let isExsist = TransactionColData.value.find((record) => {\r\n            return record.userId == value.userId;\r\n          });\r\n\r\n          if (isExsist) {\r\n            isExsist.splitAmount += myselfAmount * -1;\r\n          } else {\r\n            TransactionColData.value.push(\r\n              new TransactionDetail(value.userId, value.payer, myselfAmount * -1));\r\n          }\r\n        }\r\n      });\r\n\r\n      PaymentsList.value = calculatePayments(); // 每次 Firebase 資料變動時更新統計數據\r\n\r\n      PaymentsList.value.sort((a, b) => b.amount - a.amount);\r\n      TransactionList.value.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n      TransactionColData.value.sort((a, b) => a.splitAmount - b.splitAmount);\r\n    } else {\r\n      TransactionList.value = [];\r\n      TransactionColData.value = [];\r\n    }\r\n  });\r\n\r\n  // 當組件卸載時，停止監聽\r\n  onUnmounted(() => {\r\n    splitShot();\r\n    unsubscribe();\r\n  });\r\n};\r\n\r\n\r\nconst personSplit = computed(() => {\r\n  const totalShares = TransactionList.value.map(item => {\r\n   return Object.values(item.split\r\n      .filter(_item => _item.userName !== item.payer) // 過濾掉 payer\r\n      .reduce((acc, i) => {\r\n        if (!acc[i.userId]) {\r\n          acc[i.userId] = {\r\n            \"userName\": i.userName,\r\n            \"userId\": i.userId,\r\n            \"share\": Number(i.share)\r\n          }\r\n        }\r\n        else {\r\n          acc[i.userId].share += Number(i.share);\r\n        }\r\n        return acc;\r\n      }, {}))});\r\n  return totalShares\r\n})\r\n\r\nconst dialogpayment = ref({});\r\nconst showModal = async (payment) => {\r\n  try {\r\n    const transListdocRef = doc(db, \"transactionList\", DocId.value);\r\n    isLoading.value = true;\r\n    await updateDoc(transListdocRef, {\r\n      [`${payment.id}.isLock`]: true,\r\n    });\r\n\r\n    dialogpayment.value = payment;\r\n    dialogFormVisible.value = true\r\n\r\n    isLoading.value = false;\r\n  } catch (err) {\r\n    alert(err)\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped src=\"../../public/Page.css\"></style>\r\n","import script from \"./GroupComponents.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GroupComponents.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"../../public/Page.css?vue&type=style&index=0&id=85b05db4&scoped=true&lang=css&external\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-85b05db4\"]])\n\nexport default __exports__"],"names":["registerVersion","name","version","firebaseConfig","apiKey","import","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","db","getFirestore","router","useRouter","gotoHomePage","push","__exports__","formLabelWidth","ShareArea","ref","MemberList","inject","profile","dialogFormVisible","_useModel","__props","DocId","dialogpayment","CloseDialog","async","transListdocRef","doc","value","NeedUpdate","isOverflow","split","filter","s","userName","payer","reduce","sum","Number","share","amount","alert","updateDoc","id","description","Newshare","userId","displayName","nextTick","wrapRef","scrollTop","scrollHeight","MemberChange","index","selectedUser","find","m","isLoading","currentGroup","isEdit","TransactionList","TransactionColData","PaymentsList","DocName","cardStyle","reactive","cardisNew","onMounted","fetchTransactions","err","watch","newItem","oldItem","length","plusData","item","some","_item","setCardStyle","EditGroupName","SaveGroupName","docRef","did","NewTransaction","RID","crypto","randomUUID","transaction","Transaction","Date","toMap","TransactionListdoc","TransactionListnap","getDoc","exists","setDoc","shareMember","currentUrl","shareUrl","liff","shareTargetPicker","date","isMultiple","then","TokenDoc","docId","fid","calculatePayments","transactions","balances","map","user","netAmount","splitAmount","debtors","creditors","payments","debtor","creditor","paymentAmount","Math","min","abs","from","to","shift","splitRef","splitShot","onSnapshot","docSnap","data","members","unsubscribe","tmpdata","Object","entries","key","forEach","myselfAmount","parseFloat","issplitExsist","record","TransactionDetail","isExsist","sort","a","b","onUnmounted","personSplit","computed","totalShares","values","acc","i","showModal","payment"],"sourceRoot":""}